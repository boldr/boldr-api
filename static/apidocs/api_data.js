define({ "api": [  {    "type": "get",    "url": "/activities",    "title": "List all activities",    "name": "List_Activities",    "group": "Activity",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "version": "1.0.0",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>Content-Type: application/json</p>"          }        ],        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    },    "description": "<p>Return all activities from all admin users. Null or undefined values will not be returned.</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The activity's id (uuid)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user_id",            "description": "<p>The id (uuid) of user who performed the action</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "action_type_id",            "description": "<p>The id of the action type relating to the activity.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "activity_post",            "description": "<p>The id (uuid) for the post the action relates to</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "activity_user",            "description": "<p>The id (uuid) of the user the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "activity_attachment",            "description": "<p>The id (uuid) of the attachment the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "activity_tag",            "description": "<p>The id of the tag the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "activity_menu_detail",            "description": "<p>The id of the menu detail the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "activity_template",            "description": "<p>The id (uuid) of the template the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "activity_page",            "description": "<p>The id (uuid) of the page the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "activity_role",            "description": "<p>The id of the role the action was performed on.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>The date the action was performed.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>The action type (create update delete register)</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "owner",            "description": "<p>The user object of the user responsible for the action.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "post",            "description": "<p>The post object if the activity is a post type</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "attachment",            "description": "<p>The attachment object if the activity type matches attachment</p>"          }        ]      }    },    "filename": "src/routes/activity/activity.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/activities"      }    ]  },  {    "type": "get",    "url": "/stats",    "title": "List statistics",    "name": "GetAllStats",    "group": "Admin",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "posts",            "description": "<p>The post count</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "tags",            "description": "<p>The tag count</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "users",            "description": "<p>The user count</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/admin/admin.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/stats"      }    ]  },  {    "type": "delete",    "url": "/attachments/:id",    "title": "Delete attachment",    "name": "DeleteAttachment",    "group": "Attachment",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "success": {      "fields": {        "Success 204": [          {            "group": "Success 204",            "optional": false,            "field": "204",            "description": "<p>No Content.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Invalid credentials.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "403",            "description": "<p>Forbidden</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/attachment/attachment.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/attachments/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/attachments",    "title": "List all attachments",    "name": "GetAllAttachments",    "group": "Attachment",    "examples": [      {        "title": "Example usage:",        "content": "curl -i https://staging.boldr.io/api/v1/attachments",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "attachments",            "description": "<p>List of attachments.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The attachments's id (uuid)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "file_name",            "description": "<p>The attachment's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "safe_name",            "description": "<p>Slugified / normalized file_name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "file_description",            "description": "<p>A caption describing the attachment</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "file_type",            "description": "<p>The mime type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>The url where the file is located</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>The upload date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>When the attachment was modified.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/attachment/attachment.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/attachments"      }    ]  },  {    "type": "get",    "url": "/attachments/:id",    "title": "Get specific attachment",    "name": "GetAttachment",    "group": "Attachment",    "examples": [      {        "title": "Example usage:",        "content": "curl -i https://staging.boldr.io/api/v1/attachments/1",        "type": "json"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The attachment's id (uuid)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Attachment id (uuid)</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/attachment/attachment.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/attachments/:id"      }    ]  },  {    "type": "put",    "url": "/attachments/:id",    "title": "Update attachment",    "name": "UpdateAttachment",    "group": "Attachment",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "optional": false,            "field": "202",            "description": ""          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Invalid credentials.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "403",            "description": "<p>Forbidden</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/attachment/attachment.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/attachments/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/attachments",    "title": "Upload attachment",    "name": "UploadAttachment",    "group": "Attachment",    "permission": [      {        "name": "user",        "title": "User access for certain restricted routes.",        "description": "<p>You must pass an authorization header with a token to access this endpoint.</p>"      }    ],    "version": "0.0.0",    "filename": "src/routes/attachment/attachment.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/attachments"      }    ]  },  {    "type": "get",    "url": "/auth/check",    "title": "Authentication check",    "name": "CheckAuthentication",    "group": "Auth",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Current user data</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Invalid credentials.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/auth/auth.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/auth/check"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/auth/login",    "title": "Login",    "name": "Login",    "group": "Auth",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Bearer {token}</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email address</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>User <code>token</code> to be passed to other requests.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Current user data</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "\nHTTP/1.1 200 OK\nVary: Origin\nAccess-Control-Allow-Credentials: true\n{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxYjA\",\n  \"user\": {\n  \"id\": \"1b062e26-df71-48ce-b363-4ae9b966e7a0\",\n  \"email\": \"admin@boldr.io\",\n  \"first_name\": \"Joe\",\n  \"last_name\": \"Gray\",\n  \"username\": \"Joey\",\n  \"avatar_url\": \"https://boldr.io/images/unknown-avatar.png\",\n  \"verified\": true,\n  \"role\": [{\n        \"id\": 3,\n        \"name\": \"Admin\",\n        \"image\": null,\n        \"description\": \"Complete control over the CMS\",\n        \"created_at\": \"2016-11-21T19:49:59.653Z\",\n        \"updated_at\": \"2016-11-21T19:49:59.653Z\"\n        }]\n   }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Unable to find a matching account.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/auth/auth.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/auth/login"      }    ]  },  {    "type": "post",    "url": "/auth/signup",    "title": "Signup",    "name": "Signup",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email address</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Last name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The user's display name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "avatar_url",            "description": "<p>Url for the user's avatar</p>"          }        ]      }    },    "success": {      "fields": {        "Success 201": [          {            "group": "Success 201",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Current user data</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "409",            "description": "<p>Email already exists</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Bad request.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/auth/auth.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/auth/signup"      }    ]  },  {    "type": "get",    "url": "/auth/verification/:verifToken",    "title": "Verify user",    "name": "verify",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "verification",            "description": "<VerificationToken>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "200",            "description": "<p>{Object} user Current user data</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Invalid token.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Missing or cannot find the verification token</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/auth/auth.routes.js",    "groupTitle": "",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/auth/verification/:verifToken"      }    ]  },  {    "type": "post",    "url": "/:id/reply",    "title": "Comment Reply",    "name": "AddCommentReply",    "group": "Comment",    "permission": [      {        "name": "member"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id (uuid) of the comment</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a comment matching the id.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>You must be logged in or an admin to delete</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/comment/comment.routes.js",    "groupTitle": "Comment",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/:id/reply"      }    ]  },  {    "type": "delete",    "url": "/:id",    "title": "Delete comment",    "name": "DeleteComment",    "group": "Comment",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id (uuid) of the comment</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a comment matching the id.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>You must be logged in or an admin to delete</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/comment/comment.routes.js",    "groupTitle": "Comment",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/:id"      }    ]  },  {    "type": "put",    "url": "/:id",    "title": "Edit Comment",    "name": "EditComment",    "group": "Comment",    "permission": [      {        "name": "member"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id (uuid) of the comment</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the id.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>You must be logged in or an admin to edit</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/comment/comment.routes.js",    "groupTitle": "Comment",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/:id"      }    ]  },  {    "type": "post",    "url": "/menu-details",    "title": "Create menu detail",    "name": "createDetail",    "group": "MenuDetails",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "version": "0.0.0",    "filename": "src/routes/menu/detail/menuDetail.routes.js",    "groupTitle": "MenuDetails",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menu-details"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/menu-details/:id",    "title": "Delete detail",    "name": "destroy",    "group": "MenuDetails",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the detail</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/detail/menuDetail.routes.js",    "groupTitle": "MenuDetails",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menu-details/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/menu-details",    "title": "List all menu items",    "name": "getDetails",    "group": "MenuDetails",    "permission": [      {        "name": "public"      }    ],    "version": "0.0.0",    "filename": "src/routes/menu/detail/menuDetail.routes.js",    "groupTitle": "MenuDetails",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menu-details"      }    ]  },  {    "type": "get",    "url": "/menu-details/:id",    "title": "Get menu detail",    "name": "showDetail",    "group": "MenuDetails",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the detail</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/detail/menuDetail.routes.js",    "groupTitle": "MenuDetails",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menu-details/:id"      }    ]  },  {    "type": "put",    "url": "/menu-details/:id",    "title": "Update menu detail",    "name": "updateDetail",    "group": "MenuDetails",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the detail</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/detail/menuDetail.routes.js",    "groupTitle": "MenuDetails",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menu-details/:id"      }    ]  },  {    "type": "patch",    "url": "/menu-details/:id",    "title": "Update menu detail",    "name": "updateDetail",    "group": "MenuDetails",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the detail</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/detail/menuDetail.routes.js",    "groupTitle": "MenuDetails",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menu-details/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/menus",    "title": "Create menu",    "name": "create",    "group": "Menu",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "version": "0.0.0",    "filename": "src/routes/menu/menu.routes.js",    "groupTitle": "Menu",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menus"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/menus",    "title": "List all menus",    "name": "listMenu",    "group": "Menu",    "permission": [      {        "name": "public"      }    ],    "version": "0.0.0",    "filename": "src/routes/menu/menu.routes.js",    "groupTitle": "Menu",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menus"      }    ]  },  {    "type": "get",    "url": "/menus/:id",    "title": "Get menu",    "name": "showMenu",    "group": "Menu",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the menu</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/menu.routes.js",    "groupTitle": "Menu",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menus/:id"      }    ]  },  {    "type": "patch",    "url": "/menus/:id",    "title": "Update menu",    "name": "updateMainMenu",    "group": "Menu",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the link</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/menu.routes.js",    "groupTitle": "Menu",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menus/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/menus/:id",    "title": "Update menu",    "name": "updateMenu",    "group": "Menu",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the menu</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/menu/menu.routes.js",    "groupTitle": "Menu",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/menus/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/pages",    "title": "List all pages",    "name": "listPages",    "group": "Pages",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "roles",            "description": "<p>List of pages.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/template/template.routes.js",    "groupTitle": "Pages",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/pages"      }    ]  },  {    "type": "get",    "url": "/pages",    "title": "Get all pages",    "name": "listPages",    "group": "Pages",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "roles",            "description": "<p>List of pages.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/page/page.routes.js",    "groupTitle": "Pages",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/pages"      }    ]  },  {    "type": "post",    "url": "/posts/:id/comments",    "title": "Comment on post",    "name": "AddCommentToPost",    "group": "Post",    "permission": [      {        "name": "member"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the id.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>You must be logged in to comment on a post</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts/:id/comments"      }    ]  },  {    "type": "post",    "url": "/posts/:id",    "title": "Add a tag to the post",    "name": "AddTag",    "group": "Post",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the id.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts/:id"      }    ]  },  {    "type": "post",    "url": "/posts",    "title": "Create a new post",    "name": "Create_New_Post",    "group": "Post",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "version": "1.0.0",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>Content-Type: application/json</p>"          }        ],        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "slug",            "description": "<p>The slug of the post which is the title, normalized for url use.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "excerpt",            "description": "<p>A short description or snippet of the post</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>The content of the post as html</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "raw_content",            "description": "<p>Raw, unprocessed rich content blocks</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "feature_image",            "description": "<p>The URL for an image to use with the post</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "background_image",            "description": "<p>The URL for a background image to use in the post</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "tags",            "description": "<p>Array of tag names</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "published",            "description": "<p>Whether the post is published for public display</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Meta data for the post</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "attachments",            "description": "<p>Post attachments</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "409",            "description": "<p>There is already a post with this slug. Slugs (titles) must be unique.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in to create a post.</p>"          }        ]      }    },    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts"      }    ]  },  {    "type": "delete",    "url": "/posts/:id",    "title": "Delete post by id",    "name": "DestroyPost",    "group": "Post",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the id.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts/:id"      }    ]  },  {    "type": "get",    "url": "/posts/:id",    "title": "Get post by id",    "name": "GetId",    "group": "Post",    "permission": [      {        "name": "public"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the id.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts/:id"      }    ]  },  {    "type": "get",    "url": "/posts/slug/:slug",    "title": "Get post by slug",    "name": "Get_Slug",    "group": "Post",    "permission": [      {        "name": "public"      }    ],    "version": "1.0.0",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>Content-Type: application/json</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "slug",            "description": "<p>The slug of the post</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id (uuid) of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "slug",            "description": "<p>The slug of the post which is the title, normalized for url use.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "excerpt",            "description": "<p>A short description or snippet of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>The content of the post as html</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "raw_content",            "description": "<p>Raw, unprocessed rich content blocks</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "background_image",            "description": "<p>The URL for a background image to use in the post</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Meta data for the post</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "attachments",            "description": "<p>Post attachments</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "feature_image",            "description": "<p>The URL for an image to use with the post</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "tags",            "description": "<p>Tags related to the post</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "comments",            "description": "<p>Comments related to the post</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "published",            "description": "<p>Whether the post is published for public display</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "author",            "description": "<p>The post author's user object</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the slug.</p>"          }        ]      }    },    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts/slug/:slug"      }    ]  },  {    "type": "get",    "url": "/posts",    "title": "List all posts",    "name": "List_All_Posts",    "group": "Post",    "permission": [      {        "name": "public"      }    ],    "version": "1.0.0",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>Content-Type: application/json</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "results",            "description": ""          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "total",            "description": "<p>total number of results</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "results.posts",            "description": "<p>List of posts.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.id",            "description": "<p>The id (uuid) of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.slug",            "description": "<p>The slug of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.title",            "description": "<p>The title of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.excerpt",            "description": "<p>A short description or snippet of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.content",            "description": "<p>The content of the post</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.feature_image",            "description": "<p>The URL for an image to use with the post</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "results.posts.meta",            "description": "<p>Meta data for the post</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "results.posts.attachments",            "description": "<p>Post attachments</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "results.posts.background_image",            "description": "<p>The URL for the posts background image</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "results.posts.published",            "description": "<p>Whether the post is published for public display</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "include",            "description": "<p>Include related properties of the object. This is an alternative way to fetch a relevant data in a single call. ?include=[relationship]</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1..30",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>Page number.</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1..100",            "optional": true,            "field": "limit",            "defaultValue": "30",            "description": "<p>Amount of returned items.</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "sort",            "defaultValue": "-createdAt",            "description": "<p>Order of returned items.</p>"          }        ]      },      "examples": [        {          "title": "Return all posts with related author, comments, and tags.",          "content": "Limit to 10 per page, starting on the first page\n   https://staging.boldr.io/api/v1/posts?include=[author,tags,comments]&page[size]=10&page[number]=1",          "type": "url"        }      ]    }  },  {    "type": "put",    "url": "/posts/:id",    "title": "Update post by id",    "name": "UpdatePost",    "group": "Post",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404",            "description": "<p>Unable to find a post matching the id.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/post/post.routes.js",    "groupTitle": "Post",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/posts/:id"      }    ]  },  {    "type": "get",    "url": "/roles/:id",    "title": "Get specific role",    "name": "GetRole",    "group": "Role",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>the role id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>id of the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>url for the image associated with the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the role</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "roles.users",            "description": "<p>array containing the associated user objects.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/role/role.routes.js",    "groupTitle": "Role",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/roles/:id"      }    ]  },  {    "type": "get",    "url": "/roles/:id/users",    "title": "Get users for role",    "name": "GetRoleUsers",    "group": "Role",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>the role id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>id of the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name of the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>url for the image associated with the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description of the role</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "roles.users",            "description": "<p>array containing the associated user objects.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/role/role.routes.js",    "groupTitle": "Role",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/roles/:id/users"      }    ]  },  {    "type": "get",    "url": "/roles",    "title": "List all roles",    "name": "ListRoles",    "group": "Role",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "roles",            "description": "<p>List containing the role objects.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "roles.id",            "description": "<p>id of the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "roles.name",            "description": "<p>name of the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "roles.image",            "description": "<p>url for the image associated with the role</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "roles.description",            "description": "<p>description of the role</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "roles.users",            "description": "<p>array containing the associated user objects.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/role/role.routes.js",    "groupTitle": "Role",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/roles"      }    ]  },  {    "type": "post",    "url": "/settings",    "title": "Add an additional setting",    "name": "addSetting",    "group": "Settings",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The setting's key</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>The data related to the setting</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>What the setting is for</p>"          }        ]      }    },    "success": {      "fields": {        "Success 201": [          {            "group": "Success 201",            "type": "Object",            "optional": false,            "field": "The",            "description": "<p>newly created setting.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/setting/setting.routes.js",    "groupTitle": "Settings",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/settings"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/settings/:id",    "title": "Get a specific setting",    "name": "getSetting",    "group": "Settings",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id of the setting requested.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The setting's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "uuid",            "description": "<p>The UUID of the setting</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The setting's key</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>The data related to the setting</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>What the setting is for</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "409",            "description": "<p>There is already a setting with this id or uuid.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in and an admin to update a setting.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/setting/setting.routes.js",    "groupTitle": "Settings",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/settings/:id"      }    ]  },  {    "type": "get",    "url": "/settings",    "title": "Get all settings objects",    "name": "listSettings",    "group": "Settings",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "settings",            "description": "<p>All settings blocks.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "setting.id",            "description": "<p>The setting's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "setting.uuid",            "description": "<p>The UUID of the setting</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "setting.key",            "description": "<p>The setting's key</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "setting.value",            "description": "<p>The data related to the setting</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "setting.description",            "description": "<p>What the setting is for</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/setting/setting.routes.js",    "groupTitle": "Settings",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/settings"      }    ]  },  {    "type": "patch",    "url": "/settings/:id",    "title": "Update a specific setting",    "name": "updateSetting",    "group": "Settings",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The setting's key</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>The data related to the setting</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>What the setting is for</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "409",            "description": "<p>There is already a setting with this id or uuid.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in and an admin to update a setting.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/setting/setting.routes.js",    "groupTitle": "Settings",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/settings/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/settings/:id",    "title": "Update a specific setting",    "name": "updateSetting",    "group": "Settings",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": "<p>The setting's key</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>The data related to the setting</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>What the setting is for</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "409",            "description": "<p>There is already a setting with this id or uuid.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in and an admin to update a setting.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/setting/setting.routes.js",    "groupTitle": "Settings",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/settings/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/tags",    "title": "Create tag",    "name": "CreateTAg",    "group": "Tag",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>{token}</p>"          }        ]      }    },    "success": {      "fields": {        "201": [          {            "group": "201",            "type": "Object",            "optional": false,            "field": "tag",            "description": "<p>The newly created tag</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "409",            "description": "<p>There is already a tag with this name</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in to create a tag.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags"      }    ]  },  {    "type": "delete",    "url": "/tags/:id",    "title": "Delete tag permanently",    "name": "DeleteTag",    "group": "Tag",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The tag id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "204",            "description": ""          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in to create a tag.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/tags/:id",    "title": "Get specific tag",    "name": "GetTag",    "group": "Tag",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "Object",            "optional": false,            "field": "tag",            "description": "<p>The tag requested.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/:id"      }    ]  },  {    "type": "get",    "url": "/tags/posts/:id",    "title": "Get related posts from tag id",    "name": "GetTaggedPosts",    "group": "Tag",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The tag id</p>"          }        ]      }    },    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "Object[]",            "optional": false,            "field": "posts",            "description": "<p>List of posts.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/posts/:id"      }    ]  },  {    "type": "get",    "url": "/tags/:name/posts",    "title": "Get tag by name with related posts",    "name": "GetTaggedPostsByName",    "group": "Tag",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The tag name</p>"          }        ]      }    },    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "Object[]",            "optional": false,            "field": "posts",            "description": "<p>List of posts.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/:name/posts"      }    ]  },  {    "type": "get",    "url": "/tags",    "title": "List all tags",    "name": "ListTags",    "group": "Tag",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "include",            "defaultValue": "posts",            "description": "<p>Return the posts with tags</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1..30",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>Page number.</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1..100",            "optional": true,            "field": "limit",            "defaultValue": "30",            "description": "<p>Amount of returned items.</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": true,            "field": "sort",            "defaultValue": "-createdAt",            "description": "<p>Order of returned items.</p>"          }        ]      },      "examples": [        {          "title": "Return all posts with related author, comments, and tags.",          "content": "Limit to 10 per page, starting on the first page\n   https://staging.boldr.io/api/v1/posts?include=[author,tags,comments]&page[size]=10&page[number]=1",          "type": "url"        }      ]    },    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "Object[]",            "optional": false,            "field": "tags",            "description": "<p>List of tags.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags"      }    ]  },  {    "type": "get",    "url": "/tags/:id/relate/:postid",    "title": "Relate tag to post",    "name": "RelateTagToPost",    "group": "Tag",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The tag id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "postid",            "description": "<p>the id (uuid) of the post to relate</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "204",            "description": ""          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in to create a tag.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/:id/relate/:postid"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/tags/:id",    "title": "Update tag",    "name": "UpdateTag",    "group": "Tag",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The tag id</p>"          }        ]      }    },    "success": {      "fields": {        "202": [          {            "group": "202",            "type": "Object",            "optional": false,            "field": "tag",            "description": "<p>The updated tag.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in to create a tag.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/tags/:id",    "title": "Update tag",    "name": "UpdateTag",    "group": "Tag",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The tag id</p>"          }        ]      }    },    "success": {      "fields": {        "202": [          {            "group": "202",            "type": "Object",            "optional": false,            "field": "tag",            "description": "<p>The updated tag.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "401",            "description": "<p>Unauthorized. You must be logged in to create a tag.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/tag/tag.routes.js",    "groupTitle": "Tag",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tags/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/tokens/forgot-password",    "title": "Send forgot password email",    "name": "forgottenPassword",    "group": "Token",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email address to receive the password reset token.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>Link to redirect user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "optional": false,            "field": "202",            "description": "<p>Accepted.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/token/token.routes.js",    "groupTitle": "Token",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tokens/forgot-password"      }    ]  },  {    "type": "post",    "url": "/tokens/reset-password/:token",    "title": "Reset password",    "name": "resetPassword",    "group": "Token",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "6..",            "optional": false,            "field": "password",            "description": "<p>New account password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "account",            "description": "<p>Account's data.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Token has expired or doesn't exist.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/token/token.routes.js",    "groupTitle": "Token",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/tokens/reset-password/:token"      }    ]  },  {    "type": "put",    "url": "/users/admin/:id",    "title": "Admin update user",    "name": "AdminUpdateUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>User's password.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User's data.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users/admin/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Unauthorized</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Not Found</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized (example):",          "content": "HTTP/1.1 401 Unauthorized\n\"The request requires user authentication. Please try again with the correct authorization header\"",          "type": "json"        },        {          "title": "NotFound (example):",          "content": "HTTP/1.1 404 Not Found\n\"Unable to find what you were looking for. Please try the request again.\"",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/users/:id",    "title": "Delete user",    "name": "DestroyUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to be deleted</p>"          }        ]      }    },    "success": {      "fields": {        "Success 204": [          {            "group": "Success 204",            "optional": false,            "field": "204",            "description": "<p>No Content.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Unauthorized</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Not Found</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized (example):",          "content": "HTTP/1.1 401 Unauthorized\n\"The request requires user authentication. Please try again with the correct authorization header\"",          "type": "json"        },        {          "title": "NotFound (example):",          "content": "HTTP/1.1 404 Not Found\n\"Unable to find what you were looking for. Please try the request again.\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users/:username/profile",    "title": "Get user profile",    "name": "GetProfile",    "group": "User",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the profile owner.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User's data.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users/:username/profile"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Not Found</p>"          }        ]      },      "examples": [        {          "title": "NotFound (example):",          "content": "HTTP/1.1 404 Not Found\n\"Unable to find what you were looking for. Please try the request again.\"",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/users/:id",    "title": "Update user",    "name": "ModifyUser",    "group": "User",    "permission": [      {        "name": "user",        "title": "User access for certain restricted routes.",        "description": "<p>You must pass an authorization header with a token to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>User's password.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User's data.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Unauthorized</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Not Found</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized (example):",          "content": "HTTP/1.1 401 Unauthorized\n\"The request requires user authentication. Please try again with the correct authorization header\"",          "type": "json"        },        {          "title": "NotFound (example):",          "content": "HTTP/1.1 404 Not Found\n\"Unable to find what you were looking for. Please try the request again.\"",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/users/:id",    "title": "Update user",    "name": "UpdateUser",    "group": "User",    "permission": [      {        "name": "user",        "title": "User access for certain restricted routes.",        "description": "<p>You must pass an authorization header with a token to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>User's password.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User's data.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users/:id"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Unauthorized</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Not Found</p>"          }        ]      },      "examples": [        {          "title": "Unauthorized (example):",          "content": "HTTP/1.1 401 Unauthorized\n\"The request requires user authentication. Please try again with the correct authorization header\"",          "type": "json"        },        {          "title": "NotFound (example):",          "content": "HTTP/1.1 404 Not Found\n\"Unable to find what you were looking for. Please try the request again.\"",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/users",    "title": "Create user",    "name": "adminCreateUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "Admin access only",        "description": "<p>You must pass an authorization header with a token associated with an admin user to access this endpoint.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email address.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User's password.</p>"          }        ]      }    },    "success": {      "fields": {        "Sucess 201": [          {            "group": "Sucess 201",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User's data.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "409",            "description": "<p>Email already registered.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Bad Request: MissingUserFields</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Unauthorized</p>"          }        ]      },      "examples": [        {          "title": "MissingUserFields (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n \"username\": [{\n     \"message\":\"should have required property 'username'\",\n     \"keyword\":\"required\",\n     \"params\": {\n       \"missingProperty\":\"username\"\n      }\n    }],\n \"password\": [{\n     \"message\":\"should have required property 'password'\",\n     \"keyword\":\"required\",\n     \"params\": {\n       \"missingProperty\":\"password\"\n     }\n  }]\n}",          "type": "json"        },        {          "title": "Unauthorized (example):",          "content": "HTTP/1.1 401 Unauthorized\n\"The request requires user authentication. Please try again with the correct authorization header\"",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT retrieved from logging in.</p>"          }        ]      },      "examples": [        {          "title": "AuthHeader (example):",          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiI\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users/:id",    "title": "Get user",    "name": "getUser",    "group": "User",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User's data.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users/:id"      }    ],    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Not Found</p>"          }        ]      },      "examples": [        {          "title": "NotFound (example):",          "content": "HTTP/1.1 404 Not Found\n\"Unable to find what you were looking for. Please try the request again.\"",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users",    "title": "List all users",    "name": "listUsers",    "group": "User",    "permission": [      {        "name": "public"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "users",            "description": "<p>List of users.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "400",            "description": "<p>Some parameters may contain invalid values.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "401",            "description": "<p>Admin access only.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/user/user.routes.js",    "groupTitle": "User",    "sampleRequest": [      {        "url": "https://staging.boldr.io/api/v1/users"      }    ]  }] });
